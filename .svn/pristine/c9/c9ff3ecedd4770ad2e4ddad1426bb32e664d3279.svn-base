package co.id.sofcograha.domain.invoicing.commonMasters.automaticnumbering.pojos;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.util.StringUtils;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

import co.id.sofcograha.base.constants.BaseConstants;
import co.id.sofcograha.base.master.jenisTransaksi.entities.EJenisTransaksi;
import co.id.sofcograha.base.master.jenisTransaksi.pojos.JenisTransaksi;
import co.id.sofcograha.base.utils.TimeUtil;
import co.id.sofcograha.base.utils.searchData.SearchFieldMapping;
import co.id.sofcograha.domain.invoicing.commonMasters.automaticnumbering.entities.EAutomaticNumberingComponent;

//import id.co.sofcograha.gajiidapi.base.constants.BaseConstants;
//import id.co.sofcograha.gajiidapi.base.extendables.BasePojo;
//import id.co.sofcograha.gajiidapi.base.mst.company.entities.Company;
//import id.co.sofcograha.gajiidapi.base.mst.customer.entities.Customer;
//import id.co.sofcograha.gajiidapi.base.mst.customer.pojos.CustomerPojo;
//import id.co.sofcograha.gajiidapi.base.search.SearchFieldMapping;

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(Include.ALWAYS)
public class AutomaticNumbering {

	public String id;

	public Integer noUrut;
	public String jenis;
	public String konstanta;
	public String konektor;
	public Integer width;
	
	public Long version;  
    public String usrcrt;
    public Date tglcrt;
    public String jamcrt;
    public String usrupd;
    public Date tglupd;
    public String jamupd;
		
	public JenisTransaksi jenisTransaksi;
	
	public EAutomaticNumberingComponent toEntity() {
		
		EAutomaticNumberingComponent entity = new EAutomaticNumberingComponent();
		
		entity.setId(id);
		entity.setVersion(version);
		entity.setJenis(jenis);
		entity.setNoUrut(noUrut);
		entity.setKonstanta(konstanta);
		entity.setKonektor(konektor);
		entity.setWidth(width);
		
		entity.setUsrcrt(usrcrt);

		if (tglcrt != null) {
			entity.setTglcrt(TimeUtil.convertDateToYyyyMmDd(tglcrt)); 
		}
		entity.setJamcrt(jamcrt);
		entity.setUsrupd(usrupd);
		
		if (tglupd != null) {
			entity.setTglupd(TimeUtil.convertDateToYyyyMmDd(tglupd)); 
		}
		entity.setJamupd(jamupd);

		if (jenisTransaksi != null && !StringUtils.isEmpty(jenisTransaksi.id)) {
			EJenisTransaksi eJenisTransaksi = new EJenisTransaksi();
			
			eJenisTransaksi.setId(jenisTransaksi.id);
//			eJenisTransaksi.setVersion(jenisTransaksi.version);
			
			entity.setJenisTransaksi(eJenisTransaksi);
			
		} else {
			entity.setJenisTransaksi(null);
		}
		
		return entity;
	}

	public static AutomaticNumbering fromEntity(EAutomaticNumberingComponent entity) {
		return fromEntity(entity, BaseConstants.DEFAULT_QUERY_DEPTH, BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH);
	}

	public static AutomaticNumbering fromEntity(EAutomaticNumberingComponent entity, int depthLevel, int detailDepthLevel) {
		if (entity == null) return null;
		if (depthLevel < 0) depthLevel = BaseConstants.DEFAULT_QUERY_DEPTH;
	    if (detailDepthLevel < 0) detailDepthLevel = BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH;

		AutomaticNumbering pojo = new AutomaticNumbering();
		
		pojo.id = entity.getId();
		if (depthLevel > 0) {
			
			depthLevel--;
			
			pojo.version = entity.getVersion();
			
			pojo.noUrut = entity.getNoUrut();
			pojo.jenis = entity.getJenis();
			pojo.konstanta = entity.getKonstanta();
			pojo.konektor = entity.getKonektor();
			pojo.width = entity.getWidth();

	        pojo.version = entity.getVersion();
	        pojo.usrcrt = entity.getUsrcrt();

			if (entity.getTglcrt() != null && !entity.getTglcrt().trim().equals("")) {
				pojo.tglcrt = TimeUtil.getDate(entity.getTglcrt());
			} else {
				pojo.tglcrt = null;
			}
			
	        pojo.jamcrt = entity.getJamcrt();
	        pojo.usrupd = entity.getUsrupd();
	        
			if (entity.getTglupd() != null && !entity.getTglupd().trim().equals("")) {
				pojo.tglupd = TimeUtil.getDate(entity.getTglupd());
			} else {
				pojo.tglupd = null;
			}
			
			if (detailDepthLevel > 0) {
				detailDepthLevel--;				
			}
		}
		
		return pojo;
	}

	public static List<AutomaticNumbering> fromEntities(List<EAutomaticNumberingComponent> entities) {
		return fromEntities(entities, BaseConstants.DEFAULT_QUERY_DEPTH, BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH);
	}

	public static List<AutomaticNumbering> fromEntities(List<EAutomaticNumberingComponent> entities, int depthLevel, int detailDepthLevel) {
		if (entities == null) return new ArrayList<>();
		if (depthLevel < 0) depthLevel = BaseConstants.DEFAULT_QUERY_DEPTH;
		if (detailDepthLevel < 0) detailDepthLevel = BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH;
		
		List<AutomaticNumbering> pojos = new ArrayList<>();
		
		for (EAutomaticNumberingComponent entity : entities) {
			pojos.add(AutomaticNumbering.fromEntity(entity, depthLevel, detailDepthLevel));
		}
		return pojos;
		
	}

	public static List<SearchFieldMapping> getFieldMappings() {
		List<SearchFieldMapping> mappings = new ArrayList<>();

		mappings.add(new SearchFieldMapping("id", "id"));
		mappings.add(new SearchFieldMapping("am90Id", "jenisTransaksi.id").searchOnly());
		mappings.add(new SearchFieldMapping("noUrut", "noUrut"));

		return mappings;
	}
}