package co.id.sofcograha.domain.invoicing.implementasi.programKecil.controllers;

import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import co.id.sofcograha.base.authorization.annotation.NoAuth;
import co.id.sofcograha.base.utils.ApiResponse;
import co.id.sofcograha.base.utils.searchData.SearchParameter;
import co.id.sofcograha.base.utils.searchData.SearchResult;
import co.id.sofcograha.domain.invoicing.admin.renewal.services.AdminRenewalService;
import co.id.sofcograha.domain.invoicing.implementasi.programKecil.services.ProgramKecilService;
import co.id.sofcograha.domain.invoicing.proses.invoiceOtomatis.entities.EProsesInvoiceDataRpt;
import co.id.sofcograha.domain.invoicing.proses.invoiceOtomatis.pojos.ProsesInvoiceDataRpt;
import co.id.sofcograha.domain.invoicing.proses.invoiceOtomatis.services.InvoiceOtomatisService;
import co.id.sofcograha.domain.invoicing.proses.upload.pojos.TahunBulanProses;

@RestController
@RequestMapping("/api/program-kecil")
public class ProgramKecilController {

	public static final Logger logger = LoggerFactory.getLogger(ProgramKecilController.class);

	@Autowired AdminRenewalService adminRenewalService;
	@Autowired ProgramKecilService programKecilService;
	
	//@AuthRead(DomainFunctionConstants.MST_NPWP)
	//@NoAuth
	//@GetMapping("/download-template")
	//public ApiResponse downloadExcelTemplate(HttpServletResponse response) {
	//	return ApiResponse.data("item", compositeService.download(response));
	//}
	
	//@AuthAdd(DomainFunctionConstants.MST_NPWP)
	/*
	@NoAuth
	@PostMapping("/upload-raw")
	public ApiResponse uploadExcelTemplate(@RequestBody MultipartFile file) {
		return ApiResponse.data("items", compositeService.uploadExcel(file));
	}
	*/

	/*
	@NoAuth
	@GetMapping(value = "/search-proses-data")
	public ApiResponse search(@RequestParam Map<String, String> searchParameter) {
		
		SearchResult<EProsesInvoiceDataRpt> searchResult = invoiceOtomatisService.search(SearchParameter.generate(searchParameter, 
				ProsesInvoiceDataRpt.getFieldMappings()));
		
		return ApiResponse.dataWithPaging("items", 
				ProsesInvoiceDataRpt.fromEntities(searchResult.getResult()), 
				searchResult.getPaging());
	}
	*/
	
	/*
	@NoAuth
	@GetMapping(value = "/search-renewal-data")
	public ApiResponse search(@RequestParam Map<String, String> searchParameter) {
		
		SearchResult<EAdminRenewal> searchResult = adminRenewalService.search(SearchParameter.generate(searchParameter, 
				AdminRenewal.getFieldMappings()));
		
		return ApiResponse.dataWithPaging("items", 
				AdminRenewal.fromEntities(searchResult.getResult()), 
				searchResult.getPaging());
	}
	*/
	
	@NoAuth
	@PostMapping("/saldo-live-bulanan")
	public ApiResponse proses(@RequestBody TahunBulanProses tahunBulan) {
		programKecilService.createSaldoLiveSiklusBulanan(tahunBulan.tahun, tahunBulan.bulan);
		return ApiResponse.ok();
	}

	@NoAuth
	@PostMapping("/adjustment")
	public ApiResponse adjustment(@RequestBody TahunBulanProses tahunBulan) {
		programKecilService.createAdjustmentCustomerPeriodik();
		return ApiResponse.ok();
	}

	@NoAuth
	@PostMapping("/create-admin-saldo")
	public ApiResponse createAdminSaldo(@RequestBody TahunBulanProses tahunBulan) {
		programKecilService.createAdminSaldo();
		return ApiResponse.ok();
	}

}