package co.id.sofcograha.domain.invoicing.admin.renewal.repositories;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.Query;

import org.springframework.data.jpa.repository.support.SimpleJpaRepository;
import org.springframework.stereotype.Repository;

import co.id.sofcograha.base.utils.searchData.HqlSimpleSearchBuilder;
import co.id.sofcograha.base.utils.searchData.SearchParameter;
import co.id.sofcograha.base.utils.searchData.SearchResult;
import co.id.sofcograha.domain.invoicing.admin.renewal.entities.EAdminRenewalDetAdjSubDetDiskon;

@Repository
public class EAdminRenewalDetAdjSubDetDiskonRepository extends SimpleJpaRepository<EAdminRenewalDetAdjSubDetDiskon, String> {

	protected final EntityManager em;

	public EAdminRenewalDetAdjSubDetDiskonRepository(EntityManager em) {
		super(EAdminRenewalDetAdjSubDetDiskon.class, em);
		this.em = em;
	}
	
	public EAdminRenewalDetAdjSubDetDiskon findByBK(String idAi310, Integer nourut) {
		
		String query = "SELECT e FROM EAdminRenewalDetAdjSubDetDiskon e " + 
                       "WHERE e.detailAdjustment.id = :idAi310 And " +
  	                         "e.nourut = :nourut";
		
		try {
			return em.createQuery(query, EAdminRenewalDetAdjSubDetDiskon.class)
					 .setParameter("idAi310", idAi310)
					 .setParameter("nourut", nourut)
					 .getSingleResult();
			
		} catch (NoResultException e) {
			return null;
		}
	}
	
	public List<EAdminRenewalDetAdjSubDetDiskon> findByDetailId(String idAi310) {
		
		String query = "SELECT e FROM EAdminRenewalDetAdjSubDetDiskon e " + 
                       "WHERE e.detailAdjustment.id = :idAi310 " +
  	                   "ORDER BY e.nourut"; 
		
		try {
			return em.createQuery(query, EAdminRenewalDetAdjSubDetDiskon.class)
					 .setParameter("idAi310", idAi310)
					 .getResultList();
			
		} catch (NoResultException e) {
			return null;
		}
	}
	
	/*
	public List<EAdminRenewalDetAdjSubDetDiskon> findByInvoice(String nomor) {
	
		String query = "SELECT e FROM EAdminRenewalDetAdjSubDetDiskon e " + 
                       "WHERE e.detailAdjustment.header.invoice.nomor = :nomor " +
	                   "ORDER BY e.nourut"; 
	
		try {
			return em.createQuery(query, EAdminRenewalDetAdjSubDetDiskon.class)
					.setParameter("nomor", nomor)
					.getResultList();
		
		} catch (NoResultException e) {
			return null;
		}
	}
	*/
	
	@SuppressWarnings("unchecked")
	public List<EAdminRenewalDetAdjSubDetDiskon> findByInvoice(String nomor) {
	
		Query query;
  
		StringBuilder queryStringBuilder = new StringBuilder();
		queryStringBuilder.append("select c.* from ai003 a "); 
		queryStringBuilder.append("left join ai310 b on b.id_ai003 = a.id_ai003 "); 
		queryStringBuilder.append("left join ai312 c on c.id_ai310 = b.id_ai310 "); 
		queryStringBuilder.append("left join ti001 d on d.id_ti001 = a.id_ti001 "); 
		queryStringBuilder.append("where d.nomor = :nomor ");
    
//		query = em.createNativeQuery(queryStringBuilder.toString(), EAdminRenewalDetAdjSubDetDiskon.class);
		query = em.createNativeQuery(queryStringBuilder.toString());
    
		query.setParameter("nomor", nomor);
    
//		List<EAdminRenewalDetAdjSubDetDiskon> list = query.getResultList();
		List<Object> list = query.getResultList();

		if (!list.isEmpty()) {
//			return list;
			return null;
		} else {
			return null;
		}
	}
	
	public EAdminRenewalDetAdjSubDetDiskon getOne(String id) {
		return super.findOne(id);
	}
	
	public SearchResult<EAdminRenewalDetAdjSubDetDiskon> search(SearchParameter searchParameter) {
		HqlSimpleSearchBuilder<EAdminRenewalDetAdjSubDetDiskon> search = new HqlSimpleSearchBuilder<>(EAdminRenewalDetAdjSubDetDiskon.class, em);

		search.setSort(searchParameter.getSort());
		search.setPaging(searchParameter.getPagination());

		return search.getSearchResult();
	}
	
	public EAdminRenewalDetAdjSubDetDiskon add(EAdminRenewalDetAdjSubDetDiskon entity) {
		//return save(entity);
		return saveAndFlush(entity);
	}

	public EAdminRenewalDetAdjSubDetDiskon edit(EAdminRenewalDetAdjSubDetDiskon entity) {
		return save(entity);
	}
}