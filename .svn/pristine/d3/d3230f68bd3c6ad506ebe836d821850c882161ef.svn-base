package co.id.sofcograha.domain.invoicing.kelola.invoice.controllers;

import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.InputStreamResource;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import co.id.sofcograha.base.authorization.annotation.NoAuth;
import co.id.sofcograha.base.utils.ApiResponse;
import co.id.sofcograha.base.utils.searchData.SearchParameter;
import co.id.sofcograha.base.utils.searchData.SearchResult;
import co.id.sofcograha.domain.invoicing.kelola.invoice.services.KelolaInvoiceCompleteService;
import co.id.sofcograha.domain.invoicing.transaksi.invoice.data.entities.EInvoiceHeader;
import co.id.sofcograha.domain.invoicing.transaksi.invoice.data.pojos.InvoiceHeader;
import co.id.sofcograha.domain.invoicing.transaksi.invoice.data.services.InvoiceHeaderService;

@RestController
@RequestMapping("/api/kelola-invoice")
public class KelolaInvoiceController {
	
	public static final Logger logger = LoggerFactory.getLogger(KelolaInvoiceController.class);
	
	@Autowired private InvoiceHeaderService invoiceHeaderService;
	@Autowired private KelolaInvoiceCompleteService kelolaInvoiceCompleteService;
	
	@NoAuth
	@GetMapping(value = "/search")
	public ApiResponse search(@RequestParam Map<String, String> searchParameter) {
		
		SearchResult<EInvoiceHeader> searchResult = kelolaInvoiceCompleteService.search(SearchParameter.generate(searchParameter, 
				InvoiceHeader.getFieldMappings()));
		
		return ApiResponse.dataWithPaging("items", 
				InvoiceHeader.fromEntities(searchResult.getResult()), 
				searchResult.getPaging());
	}
	
	@NoAuth
	@PutMapping(value = "/set-bayar")
	public ApiResponse setJurnalRutin(@RequestBody InvoiceHeader pojo) {
		
		EInvoiceHeader header = kelolaInvoiceCompleteService.setBayar(pojo);
		
		return ApiResponse.data("item", InvoiceHeader.fromEntity(header));
	}
	
	@NoAuth
	@GetMapping("/download-pdfs")
	public ApiResponse downloadExcelTemplate(HttpServletResponse response) {
		return ApiResponse.data("item", kelolaInvoiceCompleteService.downloaSeveralPdfs());
	}

}