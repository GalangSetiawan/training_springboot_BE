package co.id.sofcograha.domain.invoicing.admin.penggunaanMaster.entities;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import co.id.sofcograha.base.authentication.CurrentUser;
import co.id.sofcograha.base.exceptions.DevException;

@Entity
@Access(AccessType.FIELD)
@Table(name = "ai005", uniqueConstraints = @UniqueConstraint(columnNames = { "id_mi010", "id_mi001", "jnstrf", "nourut", "id_pgg" }))
public class EPenggunaanMaster implements Cloneable{
	
	@Id
	@Column(name = "id_ai005")
	private String id;
	
	@Column(name = "jnsmst")
	private String jnsmst;

	@Column(name = "id_mi010")
    private String idMi010;

	@Column(name = "id_mi001")
    private String idMi001;

	@Column(name = "jnstrf")
    private String jnstrf;

	@Column(name = "nourut")
    private Integer nourut;

	@Column(name = "jnspgg")
	private String jnspgg;

	@Column(name = "id_pgg")
    private String idPgg;

	@Column(name = "tahun")
    private String tahun;

	@Column(name = "bulan")
    private String bulan;

	@Version
    @Column(name = "version")
    private Long version;
    
    @Column(name = "usrcrt")
    private String usrcrt;
    
    @Column(name = "tglcrt")
    private String tglcrt;
    
    @Column(name = "jamcrt")
    private String jamcrt;
    
    @Column(name = "usrupd")
    private String usrupd;
    
    @Column(name = "tglupd")
    private String tglupd;
    
    @Column(name = "jamupd")
    private String jamupd;
    
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getJnsmst() {
		return jnsmst;
	}

	public void setJnsmst(String jnsmst) {
		this.jnsmst = jnsmst;
	}

	public String getIdMi010() {
		return idMi010;
	}

	public void setIdMi010(String idMi010) {
		this.idMi010 = idMi010;
	}

	public String getIdMi001() {
		return idMi001;
	}

	public void setIdMi001(String idMi001) {
		this.idMi001 = idMi001;
	}

	public String getJnstrf() {
		return jnstrf;
	}

	public void setJnstrf(String jnstrf) {
		this.jnstrf = jnstrf;
	}

	public Integer getNourut() {
		return nourut;
	}

	public void setNourut(Integer nourut) {
		this.nourut = nourut;
	}

	public String getJnspgg() {
		return jnspgg;
	}

	public void setJnspgg(String jnspgg) {
		this.jnspgg = jnspgg;
	}

	public String getIdPgg() {
		return idPgg;
	}

	public void setIdPgg(String idPgg) {
		this.idPgg = idPgg;
	}

	public String getTahun() {
		return tahun;
	}

	public void setTahun(String tahun) {
		this.tahun = tahun;
	}

	public String getBulan() {
		return bulan;
	}

	public void setBulan(String bulan) {
		this.bulan = bulan;
	}

	public Long getVersion() {
		return version;
	}

	public void setVersion(Long version) {
		this.version = version;
	}

	public String getUsrcrt() {
		return usrcrt;
	}

	public void setUsrcrt(String usrcrt) {
		this.usrcrt = usrcrt;
	}

	public String getTglcrt() {
		return tglcrt;
	}

	public void setTglcrt(String tglcrt) {
		this.tglcrt = tglcrt;
	}

	public String getJamcrt() {
		return jamcrt;
	}

	public void setJamcrt(String jamcrt) {
		this.jamcrt = jamcrt;
	}

	public String getUsrupd() {
		return usrupd;
	}

	public void setUsrupd(String usrupd) {
		this.usrupd = usrupd;
	}

	public String getTglupd() {
		return tglupd;
	}

	public void setTglupd(String tglupd) {
		this.tglupd = tglupd;
	}

	public String getJamupd() {
		return jamupd;
	}

	public void setJamupd(String jamupd) {
		this.jamupd = jamupd;
	}

	public Object clone() {
		try {
			return super.clone();
		} catch (CloneNotSupportedException e) {
			throw new DevException("Clone not supported", e);
		}
	}

    @PrePersist
	private void prePersist() {	
    	
      Date currentDate = new Date();
      
      this.id = UUID.randomUUID().toString();
      
      this.usrcrt = CurrentUser.getUsername();
      this.tglcrt = new SimpleDateFormat("yyyyMMdd").format(currentDate);
      this.jamcrt = new SimpleDateFormat("HHmmss").format(currentDate);
      
    }
    
    @PreUpdate
	private void preUpdate() {
		Date currentDate = new Date();
		
		this.usrupd = CurrentUser.getUsername();
		this.tglupd = new SimpleDateFormat("yyyyMMdd").format(currentDate);
		this.jamupd = new SimpleDateFormat("HHmmss").format(currentDate);
	}
    
}