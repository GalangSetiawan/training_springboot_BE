package co.id.sofcograha.domain.invoicing.report.invoice.pojos;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

import co.id.sofcograha.base.constants.BaseConstants;
import co.id.sofcograha.base.utils.TimeUtil;
import co.id.sofcograha.domain.invoicing.report.invoice.entities.ERptRekapCustomerPerTahun;

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(Include.ALWAYS)
public class RptRekapCustomerPerTahun {

	public String id;
	public String nama;
	public Date tglive;
	public Date tgstop;
	public String status;
	public String siklus;
	public String tipe;
	public String jnstgh;
	public String diskon;
	public Date bulanRenewal;
	public Integer lastJumkar;
	public Double defaultNilai;
	public Double januari;
	public Double pebruari;
	public Double maret;
	public Double april;
	public Double mei;
	public Double juni;
	public Double juli;
	public Double agustus;
	public Double september;
	public Double oktober;
	public Double november;
	public Double desember;
	
	public static RptRekapCustomerPerTahun fromEntity (ERptRekapCustomerPerTahun entity) {
		return fromEntity(entity, BaseConstants.DEFAULT_QUERY_DEPTH);
	}
	
	public static RptRekapCustomerPerTahun fromEntity(ERptRekapCustomerPerTahun entity, int depthLevel) {
		if (entity == null) return null;
		if (depthLevel < 0) depthLevel = BaseConstants.DEFAULT_QUERY_DEPTH;	
		
		RptRekapCustomerPerTahun pojo = new RptRekapCustomerPerTahun();
		
		pojo.id = entity.getId();
		
		if (depthLevel > 0) {
			depthLevel--;

			pojo.nama = entity.getNama();
			
			if (entity.getTglive() != null && !entity.getTglive().trim().equals("")) {
				pojo.tglive = TimeUtil.getDate(entity.getTglive());				
			} else {
				pojo.tglive = null;
			}
			
			if (entity.getTgstop() != null && !entity.getTgstop().trim().equals("")) {
				pojo.tgstop = TimeUtil.getDate(entity.getTgstop());				
			} else {
				pojo.tgstop = null;
			}
			
			pojo.status = entity.getStatus();
			pojo.siklus = entity.getSiklus();
			pojo.tipe = entity.getTipe();
			pojo.jnstgh = entity.getJnstgh();
			pojo.diskon = entity.getDiskon();
			
			if (entity.getBulanRenewal() != null && !entity.getBulanRenewal().trim().equals("")) {
				pojo.bulanRenewal = TimeUtil.getDate(entity.getBulanRenewal());				
			} else {
				pojo.bulanRenewal = null;
			}

			pojo.lastJumkar = entity.getLastJumkar();
			pojo.defaultNilai = entity.getDefaultNilai();
			
			pojo.januari  = entity.getJanuari();
			pojo.pebruari = entity.getPebruari();
			pojo.maret    = entity.getMaret();
			pojo.april    = entity.getApril();
			pojo.mei      = entity.getMei();
			pojo.juni     = entity.getJuni();
			pojo.juli     = entity.getJuli();
			pojo.agustus  = entity.getAgustus();
			pojo.september = entity.getSeptember();
			pojo.oktober   = entity.getOktober();
			pojo.november  = entity.getNovember();
			pojo.desember  = entity.getDesember();
		}

		return pojo;
	}
	
	public static List<RptRekapCustomerPerTahun> fromEntities(List<ERptRekapCustomerPerTahun> entities) {
		return fromEntities(entities,BaseConstants.DEFAULT_QUERY_DEPTH);
	}
	
	public static List<RptRekapCustomerPerTahun> fromEntities(List<ERptRekapCustomerPerTahun> entities, int depthLevel) {
		if (entities == null) return new ArrayList<>();
		if (depthLevel < 0) depthLevel = BaseConstants.DEFAULT_QUERY_DEPTH;
		
		List<RptRekapCustomerPerTahun> pojos = new ArrayList<>();
		
		for (ERptRekapCustomerPerTahun entity : entities) {
			pojos.add(RptRekapCustomerPerTahun.fromEntity(entity, depthLevel));
		}
		return pojos;
	}
	
}
