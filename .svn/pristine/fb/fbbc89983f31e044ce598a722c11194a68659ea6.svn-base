package co.id.sofcograha.domain.invoicing.saldo.live.entities;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import co.id.sofcograha.base.authentication.CurrentUser;
import co.id.sofcograha.base.exceptions.DevException;
import co.id.sofcograha.domain.invoicing.masters.customer.entities.ECustomerGajiId;
import co.id.sofcograha.domain.invoicing.masters.produk.entities.EProduk;
import co.id.sofcograha.domain.invoicing.transaksi.berhenti.entities.ETrxBerhenti;
import co.id.sofcograha.domain.invoicing.transaksi.hold.entities.ETrxHold;
import co.id.sofcograha.domain.invoicing.transaksi.live.entities.ETrxLive;

@Entity
@Access(AccessType.FIELD)
@Table(name = "si004", uniqueConstraints = @UniqueConstraint(columnNames = { "id_mi010", "id_mi001", "tglive" }))
public class ESaldoLive implements Cloneable {

	@Id
	@Column(name = "id_si004")
	private String id;

	@Column(name = "tglive")
	private String tglive;

	@Column(name = "tgstop")
	private String tgstop;

	@Column(name = "tghold")
	private String tghold;

	@Column(name = "flproi")
	private String flproi;

	@Column(name = "fluplo")
	private String fluplo;

	@Column(name = "thpro")
	private String thpro;

	@Column(name = "blpro")
	private String blpro;

	@Version
	@Column(name = "version")
	private Long version;

	@Column(name = "usrcrt")
	private String usrcrt;

	@Column(name = "tglcrt")
	private String tglcrt;

	@Column(name = "jamcrt")
	private String jamcrt;

	@Column(name = "usrupd")
	private String usrupd;

	@Column(name = "tglupd")
	private String tglupd;

	@Column(name = "jamupd")
	private String jamupd;

	@OneToOne
	@JoinColumn(name = "id_mi010")
	private ECustomerGajiId customer;

	@OneToOne
	@JoinColumn(name = "id_mi001")
	private EProduk produk;

	@OneToOne
	@JoinColumn(name = "id_ti010")
	private ETrxLive trxLive;

	@OneToOne
	@JoinColumn(name = "id_ti020")
	private ETrxBerhenti trxBerhenti;

	@OneToOne
	@JoinColumn(name = "id_ti030")
	private ETrxHold trxHold;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getTglive() {
		return tglive;
	}

	public void setTglive(String tglive) {
		this.tglive = tglive;
	}

	public String getTgstop() {
		return tgstop;
	}

	public void setTgstop(String tgstop) {
		this.tgstop = tgstop;
	}

	public String getTghold() {
		return tghold;
	}

	public void setTghold(String tghold) {
		this.tghold = tghold;
	}

	public String getFlproi() {
		return flproi;
	}

	public void setFlproi(String flproi) {
		this.flproi = flproi;
	}

	public String getFluplo() {
		return fluplo;
	}

	public void setFluplo(String fluplo) {
		this.fluplo = fluplo;
	}

	public String getThpro() {
		return thpro;
	}

	public void setThpro(String thpro) {
		this.thpro = thpro;
	}

	public String getBlpro() {
		return blpro;
	}

	public void setBlpro(String blpro) {
		this.blpro = blpro;
	}

	public Long getVersion() {
		return version;
	}

	public void setVersion(Long version) {
		this.version = version;
	}

	public String getUsrcrt() {
		return usrcrt;
	}

	public void setUsrcrt(String usrcrt) {
		this.usrcrt = usrcrt;
	}

	public String getTglcrt() {
		return tglcrt;
	}

	public void setTglcrt(String tglcrt) {
		this.tglcrt = tglcrt;
	}

	public String getJamcrt() {
		return jamcrt;
	}

	public void setJamcrt(String jamcrt) {
		this.jamcrt = jamcrt;
	}

	public String getUsrupd() {
		return usrupd;
	}

	public void setUsrupd(String usrupd) {
		this.usrupd = usrupd;
	}

	public String getTglupd() {
		return tglupd;
	}

	public void setTglupd(String tglupd) {
		this.tglupd = tglupd;
	}

	public String getJamupd() {
		return jamupd;
	}

	public void setJamupd(String jamupd) {
		this.jamupd = jamupd;
	}

	public ECustomerGajiId getCustomer() {
		return customer;
	}

	public void setCustomer(ECustomerGajiId customer) {
		this.customer = customer;
	}

	public EProduk getProduk() {
		return produk;
	}

	public void setProduk(EProduk produk) {
		this.produk = produk;
	}

	public ETrxLive getTrxLive() {
		return trxLive;
	}

	public void setTrxLive(ETrxLive trxLive) {
		this.trxLive = trxLive;
	}

	public ETrxBerhenti getTrxBerhenti() {
		return trxBerhenti;
	}

	public void setTrxBerhenti(ETrxBerhenti trxBerhenti) {
		this.trxBerhenti = trxBerhenti;
	}

	public ETrxHold getTrxHold() {
		return trxHold;
	}

	public void setTrxHold(ETrxHold trxHold) {
		this.trxHold = trxHold;
	}

	public Object clone() {
		try {
			return super.clone();
		} catch (CloneNotSupportedException e) {
			throw new DevException("Clone not supported", e);
		}
	}

	@PrePersist
	private void prePersist() {

		Date currentDate = new Date();

		this.id = UUID.randomUUID().toString();

		this.usrcrt = CurrentUser.getUsername();
		this.tglcrt = new SimpleDateFormat("yyyyMMdd").format(currentDate);
		this.jamcrt = new SimpleDateFormat("HHmmss").format(currentDate);

	}

	@PreUpdate
	private void preUpdate() {
		Date currentDate = new Date();

		this.usrupd = CurrentUser.getUsername();
		this.tglupd = new SimpleDateFormat("yyyyMMdd").format(currentDate);
		this.jamupd = new SimpleDateFormat("HHmmss").format(currentDate);
	}
}