package co.id.sofcograha.domain.invoicing.transaksi.tagihanTerjadwal.pojos;

import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

import co.id.sofcograha.base.constants.BaseConstants;
import co.id.sofcograha.domain.invoicing.transaksi.tagihanTerjadwal.entities.ETagihanTerjadwalHeader;

@JsonInclude(Include.ALWAYS)
public class TagihanTerjadwalComplete {

	public TagihanTerjadwalHeader header;
	public List<TagihanTerjadwalDetailImplementasi> detailImplementasi;
	public List<TagihanTerjadwalDetailTraining> detailTraining;
	public List<TagihanTerjadwalDetailLainLainMaster> detailLainLainMaster;
	
	// untuk penanda apakah data ini tertandai dipilih untuk grid yang punya checkbox select
	// dipakai di proses bulanan (grid jurnal rutin)
	public boolean isSelect;

	@JsonIgnore
	public ETagihanTerjadwalHeader getEntityHeader() {
		return header.toEntity();
	}

	public static TagihanTerjadwalComplete setFromEntity(ETagihanTerjadwalHeader entity) {
		
		TagihanTerjadwalComplete pojo = new TagihanTerjadwalComplete();
		pojo.header = TagihanTerjadwalHeader.fromEntity(entity);

		// detail depth level diisi = 1, supaya sub detail ikutan diambil (karena detail punya sub detail0
		pojo.detailLainLainMaster = TagihanTerjadwalDetailLainLainMaster.fromEntities(entity.getDetailLainLainMaster(), BaseConstants.DEFAULT_QUERY_DEPTH, 1);
		pojo.detailImplementasi = TagihanTerjadwalDetailImplementasi.fromEntities(entity.getDetailImplementasi(), BaseConstants.DEFAULT_QUERY_DEPTH, 1);
		pojo.detailTraining = TagihanTerjadwalDetailTraining.fromEntities(entity.getDetailTraining(), BaseConstants.DEFAULT_QUERY_DEPTH, 1);
		
		pojo.isSelect = false;
		
		return pojo;
	}
	
	public static List<TagihanTerjadwalComplete> fromEntities(List<ETagihanTerjadwalHeader> entities){
	
		if (entities == null) return new ArrayList<>();
		
		List<TagihanTerjadwalComplete> pojos = new ArrayList<>();
		
		for (ETagihanTerjadwalHeader entity : entities) {
			pojos.add(setFromEntity(entity));
		}
		return pojos;
		
	}
	
}
