package co.id.sofcograha.base.master.kamus.pojos;

import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

import co.id.sofcograha.base.constants.BaseConstants;
import co.id.sofcograha.base.master.kamus.entities.EStdKamus;
import co.id.sofcograha.base.utils.searchData.SearchFieldMapping;

@JsonInclude(Include.ALWAYS)
public class StdKamus {
	
	public String id;
	public String bahasa;
	public String key;
	public String value;
	public Long version;  
	
	public EStdKamus toEntity() {
		
		EStdKamus entity = new EStdKamus();
		
		entity.setId(id);
		entity.setBahasa(bahasa);
		entity.setKey(key);
		entity.setValue(value);
		entity.setVersion(version);
		
		return entity;
	}
	
	public static List<EStdKamus> toEntities(List<StdKamus> pojos) {
		if (pojos == null) return null;

		List<EStdKamus> entities = new ArrayList<EStdKamus>();
		for (StdKamus pojo : pojos) {
			entities.add(pojo.toEntity());
		}

		return entities;
	}
	
	public static StdKamus fromEntity (EStdKamus entity) {
		return fromEntity(entity, BaseConstants.DEFAULT_QUERY_DEPTH, BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH);
	}
	
	public static StdKamus fromEntity (EStdKamus entity, int depthLevel) {
		return fromEntity(entity, depthLevel, BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH);
	}
	
	public static StdKamus fromEntity(EStdKamus entity, int depthLevel, int detailDepthLevel) {
		
		if (entity == null) return null;
		if (depthLevel < 0) depthLevel = BaseConstants.DEFAULT_QUERY_DEPTH;	
	    if (detailDepthLevel < 0) detailDepthLevel = BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH;
		
	    StdKamus pojo = new StdKamus();
		
		pojo.id = entity.getId();
		if (depthLevel > 0) {
			depthLevel--;

			pojo.bahasa = entity.getBahasa();
			pojo.key = entity.getKey();
			pojo.value = entity.getValue();
			pojo.version = entity.getVersion();
	      
			if (detailDepthLevel > 0) {
				detailDepthLevel--;
				
			}
		}

		return pojo;
	}
	
	public static List<StdKamus> fromEntities(List<EStdKamus> entities){
		return fromEntities(entities, BaseConstants.DEFAULT_QUERY_DEPTH, BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH);
	}
	
	public static List<StdKamus> fromEntities(List<EStdKamus> entities, int depthLevel, int detailDepthLevel){
		
		if (entities == null) return new ArrayList<>();
		if (depthLevel < 0) depthLevel = BaseConstants.DEFAULT_QUERY_DEPTH;
		if (detailDepthLevel < 0) detailDepthLevel = BaseConstants.DEFAULT_DETAIL_QUERY_DEPTH;
		
		List<StdKamus> pojos = new ArrayList<>();
		
		for (EStdKamus entity : entities) {
			pojos.add(StdKamus.fromEntity(entity, depthLevel, detailDepthLevel));
		}
		return pojos;
	}

	public static List<SearchFieldMapping> getFieldMappings() {
		List<SearchFieldMapping> mappings = new ArrayList<>();
		
		mappings.add(new SearchFieldMapping("bahasa", "bahasa", String.class));
		mappings.add(new SearchFieldMapping("key", "key", String.class));
		mappings.add(new SearchFieldMapping("value", "value", String.class));
		
		return mappings;
	}
}	
